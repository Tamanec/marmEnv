#!/usr/bin/env bash

##
# Безверсионные контейнеры
#
# router
# postgres
# mongo
# memcached
# fs
# userfiles
##

LOG_OPTS="--log-driver=json-file --log-opt max-size=100m --log-opt max-file=3"

#######
# Router - прокси по версии и токену
#######

docker network create marm-router

docker run -d --name marm-router \
    --net marm-router \
    -p 80:80 \
    ${LOG_OPTS} \
    marm-router

#######
# Postgres
#######

docker network create marm-db

docker run -d --name marm-postgres \
    --net marm-db \
    -p 5432:5432 \
    -v /data/postgres:/var/lib/postgresql/data \
    ${LOG_OPTS} \
    marm-postgres

#######
# Mongo
#######

docker run -d --name marm-mongo \
    --net marm-db \
    -p 27017:27017 \
    -v /data/mongo:/data/db \
    ${LOG_OPTS} \
    marm-mongo

#######
# memcached
#######

docker run -d --name marm-memcached \
    --net marm-db \
    -p 11211:11211 \
    ${LOG_OPTS} \
    marm-memcached

#######
# Файловое хранилище (изображения)
#######

docker create --name marm-data-fs marm-data-fs

# server

docker run -d --name marm-server-fs \
    -p 8080:80 \
    --volumes-from marm-data-fs \
    ${LOG_OPTS} \
    marm-server-fs

# logrotate server fs

docker run -d --name marm-logrotate-server-fs \
    --volumes-from marm-server-fs \
    ${LOG_OPTS} \
    marm-logrotate-server

#######
# userfiles
#######

docker create --name marm-data-userfiles marm-data-userfiles